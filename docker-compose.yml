services:
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    expose:
      - "80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - api
      - pocketbase
    networks:
      - stock-network

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "caddy:80"
      - "--log=stdout"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"  # Ngrok web UI
    depends_on:
      - caddy
    networks:
      - stock-network

  api:
    build: ./backend
    env_file: ./backend/.env
    expose:
      - "8000"
    depends_on:
      - pocketbase
    volumes:
      - ./backend/app:/app/app
    networks:
      - stock-network
    environment:
      POCKETBASE_ADMIN_EMAIL: ${POCKETBASE_EMAIL:-admin@stock.local}
      POCKETBASE_ADMIN_PASSWORD: ${POCKETBASE_PASSWORD:-VotreSuperMotDePasseSecurisé123!}
  
  services:
  pocketbase:
    build: ./pocketbase
    restart: unless-stopped
    volumes:
      - ./pocketbase/pb_data:/pb/pb_data
      - ./pocketbase/init_collections.py:/pb/init_collections.py
      - ./data/stock_initial.csv:/pb/stock_initial.csv
    environment:
      POCKETBASE_EMAIL: admin@stock.local
      POCKETBASE_PASSWORD: VotreSuperMotDePasseSecurisé123!
      # Variables pour auto-création admin
      POCKETBASE_ADMIN_EMAIL: admin@stock.local
      POCKETBASE_ADMIN_PASSWORD: VotreSuperMotDePasseSecurisé123!
    expose:
      - "8090"
    networks:
      - stock-network
    # Créer l'admin au premier run
    command: >
      sh -c "
        /pocketbase serve --http=0.0.0.0:8090 &
        sleep 5 &&
        /pocketbase admin create admin@stock.local VotreSuperMotDePasseSecurisé123! 2>/dev/null || true &&
        python3 /pb/init_collections.py || true &&
        wait
      "
networks:
  stock-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
